/*
 * This source file was generated by the Gradle 'init' task
 */
package projectabc;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.testfx.framework.junit5.ApplicationTest;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.testfx.matcher.control.LabeledMatchers.hasText;
import static org.testfx.api.FxAssert.verifyThat;
import static org.testfx.assertions.api.Assertions.assertThat;
public class AuthAppTest extends ApplicationTest {
    private Stage stage;
    private AuthApp authApp;
    private TextField usernameField;
    private TextField passwordField;
    private Button loginButton;


    @Override
    public void start(Stage stage) {
        authApp = new AuthApp(stage);
    }
    

    @BeforeEach
    public void setup() {
        // Reset any necessary states before each test (if applicable).
    }

    @Test
    void testFailedLogin() {
        clickOn("#usernameField").write("wrongUser");
        clickOn("#passwordField").write("wrongPass");
        clickOn("#loginButton");
        
        assertFalse(Database.validateUser("wrongUser", "wrongPass"), "Login should fail with incorrect credentials");
    }

    @Test
    void testRegisterButtonNavigatesToRegisterScene() {
        Button registerButton = lookup("#registerButton").query();
        clickOn(registerButton);

        Button registerButtonReg = lookup("#registerButtonReg").query();
        assertNotNull(registerButtonReg, "Register button in Register scene should exist");
    }

    @Test
    public void testLoginUIElementsExist() {
        usernameField = lookup("#usernameField").query();
        passwordField = lookup("#passwordField").query();
        loginButton = lookup("#loginButton").query();

        assertThat(usernameField).isNotNull();
        assertThat(passwordField).isNotNull();
        assertThat(loginButton).isNotNull();
    }

}